{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components';\nimport Helmet from 'react-helmet'; // from https://github.com/zeit/next.js/edit/canary/examples/with-react-helmet/pages/_document.js\n\nexport default class extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles(__jsx(App, props))\n      });\n\n      const documentProps = await Document.getInitialProps(ctx);\n      return _objectSpread({}, documentProps, {\n        helmet: Helmet.renderStatic(),\n        styles: __jsx(React.Fragment, null, documentProps.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  get helmetHtmlAttrComponents() {\n    return this.props.helmet.htmlAttributes.toComponent();\n  }\n\n  get helmetBodyAttrComponents() {\n    return this.props.helmet.bodyAttributes.toComponent();\n  }\n\n  get helmetHeadComponents() {\n    return _Object$keys(this.props.helmet).filter(el => el !== 'htmlAttributes' && el !== 'bodyAttributes').map(el => this.props.helmet[el].toComponent());\n  }\n\n  get helmetJsx() {\n    let title = 'Flixmates';\n    return __jsx(Helmet, null, __jsx(\"title\", null, title), __jsx(\"meta\", {\n      charSet: \"UTF-8\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\"\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: title\n    }));\n  }\n\n  render() {\n    return __jsx(\"html\", this.helmetHtmlAttrComponents, __jsx(Head, null, __jsx(\"link\", {\n      rel: \"manifest\",\n      href: \"/static/manifest.json\"\n    }), this.helmetJsx, this.helmetHeadComponents), __jsx(\"body\", this.helmetBodyAttrComponents, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}","map":{"version":3,"sources":["D:/jotter/pages/_document.js"],"names":["Document","Head","Main","NextScript","ServerStyleSheet","Helmet","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","documentProps","helmet","renderStatic","styles","getStyleElement","seal","helmetHtmlAttrComponents","htmlAttributes","toComponent","helmetBodyAttrComponents","bodyAttributes","helmetHeadComponents","filter","el","map","helmetJsx","title","render"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;AACA,eAAe,cAAcL,QAAd,CAAuB;AACpC,eAAaM,eAAb,CAA8BC,GAA9B,EAAmC;AACjC,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd;AACA,UAAMK,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AACA,QAAI;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,KAAK,CAACM,aAAN,CAAoB,MAAC,GAAD,EAASD,KAAT,CAApB;AADX,OAAD,CADpB;;AAKA,YAAME,aAAa,GAAG,MAAMf,QAAQ,CAACM,eAAT,CAAyBC,GAAzB,CAA5B;AACA,+BACKQ,aADL;AAEEC,QAAAA,MAAM,EAAEX,MAAM,CAACY,YAAP,EAFV;AAGEC,QAAAA,MAAM,EACJ,4BACGH,aAAa,CAACG,MADjB,EAEGV,KAAK,CAACW,eAAN,EAFH;AAJJ;AAUD,KAjBD,SAiBU;AACRX,MAAAA,KAAK,CAACY,IAAN;AACD;AACF;;AAED,MAAIC,wBAAJ,GAAgC;AAC9B,WAAO,KAAKR,KAAL,CAAWG,MAAX,CAAkBM,cAAlB,CAAiCC,WAAjC,EAAP;AACD;;AAED,MAAIC,wBAAJ,GAAgC;AAC9B,WAAO,KAAKX,KAAL,CAAWG,MAAX,CAAkBS,cAAlB,CAAiCF,WAAjC,EAAP;AACD;;AAED,MAAIG,oBAAJ,GAA4B;AAC1B,WAAO,aAAY,KAAKb,KAAL,CAAWG,MAAvB,EACJW,MADI,CACGC,EAAE,IAAIA,EAAE,KAAK,gBAAP,IAA2BA,EAAE,KAAK,gBAD3C,EAEJC,GAFI,CAEAD,EAAE,IAAI,KAAKf,KAAL,CAAWG,MAAX,CAAkBY,EAAlB,EAAsBL,WAAtB,EAFN,CAAP;AAGD;;AAED,MAAIO,SAAJ,GAAiB;AACf,QAAIC,KAAK,GAAG,WAAZ;AACA,WACE,MAAC,MAAD,QACE,qBAAQA,KAAR,CADF,EAEE;AAAM,MAAA,OAAO,EAAC;AAAd,MAFF,EAGE;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC;AAA9B,MAHF,EAIE;AAAM,MAAA,QAAQ,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAEA;AAAnC,MAJF,CADF;AAQD;;AAEDC,EAAAA,MAAM,GAAI;AACR,WACE,cAAU,KAAKX,wBAAf,EACE,MAAC,IAAD,QACE;AAAM,MAAA,GAAG,EAAC,UAAV;AAAqB,MAAA,IAAI,EAAC;AAA1B,MADF,EAEI,KAAKS,SAFT,EAGI,KAAKJ,oBAHT,CADF,EAME,cAAU,KAAKF,wBAAf,EACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CANF,CADF;AAaD;;AAlEmC","sourcesContent":["import Document, { Head, Main, NextScript } from 'next/document'\r\nimport { ServerStyleSheet } from 'styled-components'\r\nimport Helmet from 'react-helmet'\r\n\r\n// from https://github.com/zeit/next.js/edit/canary/examples/with-react-helmet/pages/_document.js\r\nexport default class extends Document {\r\n  static async getInitialProps (ctx) {\r\n    const sheet = new ServerStyleSheet()\r\n    const originalRenderPage = ctx.renderPage\r\n    try {\r\n      ctx.renderPage = () =>\r\n        originalRenderPage({\r\n          enhanceApp: App => props => sheet.collectStyles(<App {...props} />)\r\n        })\r\n\r\n      const documentProps = await Document.getInitialProps(ctx)\r\n      return {\r\n        ...documentProps,\r\n        helmet: Helmet.renderStatic(),\r\n        styles: (\r\n          <>\r\n            {documentProps.styles}\r\n            {sheet.getStyleElement()}\r\n          </>\r\n        )\r\n      }\r\n    } finally {\r\n      sheet.seal()\r\n    }\r\n  }\r\n\r\n  get helmetHtmlAttrComponents () {\r\n    return this.props.helmet.htmlAttributes.toComponent()\r\n  }\r\n\r\n  get helmetBodyAttrComponents () {\r\n    return this.props.helmet.bodyAttributes.toComponent()\r\n  }\r\n\r\n  get helmetHeadComponents () {\r\n    return Object.keys(this.props.helmet)\r\n      .filter(el => el !== 'htmlAttributes' && el !== 'bodyAttributes')\r\n      .map(el => this.props.helmet[el].toComponent())\r\n  }\r\n\r\n  get helmetJsx () {\r\n    let title = 'Flixmates'\r\n    return (\r\n      <Helmet>\r\n        <title>{title}</title>\r\n        <meta charSet=\"UTF-8\"/>\r\n        <meta name='viewport' content='width=device-width, initial-scale=1' />\r\n        <meta property='og:title' content={title} />\r\n      </Helmet>\r\n    )\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <html {...this.helmetHtmlAttrComponents}>\r\n        <Head>\r\n          <link rel=\"manifest\" href=\"/static/manifest.json\" />\r\n          { this.helmetJsx }\r\n          { this.helmetHeadComponents }\r\n        </Head>\r\n        <body {...this.helmetBodyAttrComponents}>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </html>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}